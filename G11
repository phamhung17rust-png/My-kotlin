import java.util.*

private fun readLn() = readLine()!! // string line
private fun readStr() = readLn().toString()
private fun readInt() = readLn().toInt() // single int
private fun readLong() = readLn().toLong() // single long
private fun readDouble() = readLn().toDouble() // single double
private fun readStrings() = readLn().split(" ") // list of strings
private fun readInts() = readStrings().map { it.toInt() } // list of ints
private fun readLongs() = readStrings().map { it.toLong() } // list of longs
private fun readDoubles() = readStrings().map { it.toDouble() } // list of doubles
// var dp = Array(n) { Array(2) { Array<Int>(2) { limit} } }
var ans = Array(51){0}
var n = 0


fun solve(v : Array<Int>, step : Int)
{
    if(v.size <= 1) return
    var flag = 0
    for(x in v)
    {
        if(x +1 == n) continue
        if(ans[x] > step)
            flag = 1
    }
    if(flag == 0) return
    var sz = v.size
    var flag1 = Array(sz){0}
    var flag2 = Array(sz){0}
    var sz1  =sz
    var sz2  =sz
    for(i in 0 until sz-1)
    {
        if(v[i] < v[i+1])
        {
            sz1--
            flag1[i] = 1
            var x = v[i]
            ans[x] = Math.min(step,ans[x])
        }
        else
        {
            sz2--
            flag2[i+1] = 1
            var x = v[i+1]
            ans[x] = Math.min(step,ans[x])
        }
    }
    var v1 = Array(sz1){0}
    var v2 = Array(sz2){0}
    sz1 = 0
    sz2 = 0
    for(i in 0 until sz)
    {
        if(flag1[i] == 0)
        {
            v1[sz1++] = v[i]
        }
        if(flag2[i] == 0)
        {
            v2[sz2++] = v[i]
        }
    }
    if(sz1 < sz2)
    {
        if(sz1 != sz)
            solve(v1,step+1)
        if(sz2 != sz)
            solve(v2,step+1)
    }
    else
    {
        if(sz2 != sz)
            solve(v2,step+1)
        if(sz1 != sz)
            solve(v1,step+1)
    }
}
fun main()
{
   var ncase = readInt()
    while(ncase -- > 0)
    {
        n = readInt()
        var v = readInts().toIntArray()
        var v0 = Array(n){0}
        for(i in 0 until n)
        {
            v0[i] = v[i]-1
        }
        ans = Array(n-1){1000000000}
        solve(v0,1)
        println(ans.joinToString (" "))
    }
}